{"version":3,"sources":["components/Diagnostics.js","components/Chart.js","components/TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["AvatarList","props","isIcon","Avatar","src","Diagnostics","useState","diagnostics","setdiagnostics","useEffect","fetch","then","res","json","data","List","map","d","ListItem","ListItemAvatar","id","ListItemText","secondary","item","primary","value","Chart","chart","setChart","labels","day","datasets","label","principal","backgroundColor","profit","height","width","options","maintainAspectRatio","scales","x","stacked","y","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","marginBottom","TopBar","classes","AppBar","position","className","Toolbar","IconButton","edge","color","Typography","variant","Button","App","Container","Grid","container","xs","Card","CardHeader","CardContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfe664f4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText } from '@material-ui/core';\r\n\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\n\r\nfunction AvatarList(props) {\r\n    const isIcon = props;\r\n    if (isIcon.isIcon === 1) {\r\n        return (\r\n            <Avatar>\r\n                <AccountBalanceWalletIcon />                   \r\n            </Avatar>\r\n        );\r\n    }\r\n    if (isIcon.isIcon === 2) {\r\n        return (\r\n            <Avatar>\r\n                <TrendingUpIcon />                    \r\n            </Avatar>\r\n        );\r\n    }\r\n    if (isIcon.isIcon === 3) {\r\n        return (\r\n            <Avatar>\r\n                <MoneyIcon />                    \r\n            </Avatar>\r\n        );\r\n    }\r\n    if (isIcon.isIcon === 5) {\r\n        return (            \r\n                \"\"                   \r\n        );\r\n    }\r\n    return (\r\n        <Avatar src=\"/report/bitcoin-black-icon.png\" />            \r\n    );\r\n}\r\n\r\nfunction Diagnostics() {\r\n\r\n    const [diagnostics, setdiagnostics] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.npoint.io/57d46732539002f7ec28/diagnostic\")\r\n            .then(res => res.json())\r\n            .then(data => setdiagnostics(data))\r\n    }, []);\r\n\r\n    return (                             \r\n        <List>\r\n            {diagnostics.map(d => {\r\n                return (                        \r\n                    <ListItem key={d.id}>\r\n                        <ListItemAvatar>\r\n                            <AvatarList isIcon={d.id}/>\r\n                        </ListItemAvatar>\r\n                        <ListItemText secondary={d.item} primary={d.value}/>\r\n                    </ListItem>\r\n                )\r\n            })\r\n\r\n            }\r\n        </List>        \r\n    )\r\n}\r\n\r\nexport default Diagnostics;","import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nfunction Chart() {\r\n\tconst [chart, setChart] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.npoint.io/57d46732539002f7ec28/chart\")\r\n            .then(res => res.json())\r\n            .then(data => setChart(data))\r\n    }, []);\r\n\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{chart.map(data => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Bar\r\n\t\t\t\t\t\tkey={data.id} \r\n\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\tlabels: data.day,\r\n\t\t\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Principal (VND)',\r\n\t\t\t\t\t\t\t\t\tdata: data.principal,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(54, 162, 235, 0.4)',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Profit (VND)',\r\n\t\t\t\t\t\t\t\t\tdata: data.profit,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(255, 99, 132, 0.4)',\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\theight={400}\r\n\t\t\t\t\t\twidth={600}\r\n\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\tmaintainAspectRatio: false,\r\n\t\t\t\t\t\t\tscales: {\r\n\t\t\t\t\t\t\t\tx: {stacked: true},\r\n\t\t\t\t\t\t\t\ty: {stacked: true},\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport {Typography, Avatar} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    appBar: {\r\n      backgroundColor: \"rgb(34,139,34)\",\r\n      marginBottom: 30,\r\n    }\r\n}));\r\n\r\nfunction TopBar() {\r\n    const classes = useStyles();\r\n    return (\r\n      \r\n        <AppBar position=\"sticky\" className={classes.appBar}>        \r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <Avatar src=\"/report/athena.png\" />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Index Porfolio Report\r\n            </Typography>\r\n            <Button color=\"inherit\">MAI NGHI</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default TopBar;","import './App.css';\r\n\r\nimport {Container, Typography} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Diagnostics from './components/Diagnostics';\r\nimport Chart from './components/Chart';\r\nimport TopBar from './components/TopBar';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <TopBar />\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardHeader \r\n                title=\"Diagnostics\"\r\n              />\r\n              <CardContent>\r\n                <Diagnostics />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardHeader \r\n                title=\"Chart\"\r\n              />\r\n              <CardContent>\r\n                <Chart />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}